[{"PackageName":"Autofac","PackageVersion":"6.0.0","PackageUrl":"https://autofac.org/","Description":"Autofac is an IoC container for Microsoft .NET. It manages the dependencies between classes so that applications stay easy to change as they grow in size and complexity.","LicenseUrl":"https://licenses.nuget.org/MIT","LicenseType":"MIT"},{"PackageName":"Fluent.Ribbon","PackageVersion":"8.0.1","PackageUrl":"https://github.com/fluentribbon/Fluent.Ribbon","Description":"Fluent.Ribbon is a library that implements an Office-like user interface for the Windows Presentation Foundation (WPF). It provides controls such as RibbonTabControl, Backstage, Gallery, QuickAccessToolbar, ScreenTip and so on.","LicenseUrl":"https://aka.ms/deprecateLicenseUrl","LicenseType":"license/License.txt"},{"PackageName":"MvvmLightLibsStd10","PackageVersion":"5.4.1.1","PackageUrl":"http://www.mvvmlight.net/","Description":"V5.4.1.1 for .NET Standard; see http://www.mvvmlight.net/std10. The MVVM Light Toolkit is a set of components helping people to get started in the Model-View-ViewModel pattern in Silverlight, WPF, Windows Phone, Windows 10 UWP, Xamarin.Android, Xamarin.iOS, Xamarin.Forms. It is a light and pragmatic framework that allows you to pick which components you want to use. This version contains only the libraries and doesn't add any scaffolding to your application!","LicenseUrl":"https://github.com/lbugnion/mvvmlight/blob/master/LICENSE","LicenseType":""},{"PackageName":"MvvmLightStd10","PackageVersion":"5.4.1.2","PackageUrl":"http://www.mvvmlight.net/","Description":"For .NET Standard; see http://www.mvvmlight.net/std10. The MVVM Light Toolkit is a set of components helping people to get started in the Model-View-ViewModel pattern in Silverlight, WPF, Windows Phone, Windows 10 UWP, Xamarin.Android, Xamarin.iOS, Xamarin.Forms. It is a light and pragmatic framework that allows you to pick which components you want to use. This version will add the MVVM Light libraries as well as some scaffolding to your application to convert it in an MVVM app!","LicenseUrl":"https://github.com/lbugnion/mvvmlight/blob/master/LICENSE","LicenseType":""},{"PackageName":"Newtonsoft.Json","PackageVersion":"12.0.3","PackageUrl":"https://www.newtonsoft.com/json","Description":"Json.NET is a popular high-performance JSON framework for .NET","LicenseUrl":"https://licenses.nuget.org/MIT","LicenseType":"MIT"},{"PackageName":"NLog","PackageVersion":"4.7.5","PackageUrl":"https://nlog-project.org/","Description":"NLog is a logging platform for .NET with rich log routing and management capabilities.\r\nNLog supports traditional logging, structured logging and the combination of both.\r\n\r\nSupported platforms:\r\n\r\n- .NET Framework 3.5, 4, 4.5, 4.6, 4.7 & 4.8\r\n- .NET Core 1, 2 and 3\r\n- .NET Standard 1.3+ and 2.0+;\r\n- .NET Framework 4 client profile\r\n- Xamarin Android, Xamarin iOs\r\n- UWP\r\n- Windows Phone 8\r\n- Silverlight 4 and 5\r\n- Mono 4\r\n\r\nFor ASP.NET Core, check: https://www.nuget.org/packages/NLog.Web.AspNetCore","LicenseUrl":"https://github.com/NLog/NLog/blob/master/LICENSE.txt","LicenseType":""},{"PackageName":"NLog.Extensions.Logging","PackageVersion":"1.6.5","PackageUrl":"https://github.com/NLog/NLog.Extensions.Logging","Description":"NLog LoggerProvider for Microsoft.Extensions.Logging for logging in .NET Standard libraries and .NET Core applications.\r\n\r\nFor ASP.NET Core, use NLog.Web.AspNetCore: https://www.nuget.org/packages/NLog.Web.AspNetCore","LicenseUrl":"https://github.com/NLog/NLog.Extensions.Logging/blob/master/LICENSE","LicenseType":""}]